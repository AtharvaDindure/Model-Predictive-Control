from gekko import GEKKO
import numpy as np
import matplotlib.pyplot as plt

for i in range(1,10):
  m=GEKKO(remote=False)
  m.time = np.linspace(46.8*(i-1),46.8*(i) , 100) #defining time horizon 0 to 10 seconds
  currstate=(0.997,1.264,0.209,1.004) 
  x1=m.Var(value=currstate[0])
  x2=m.Var(value=currstate[1])
  x3=m.Var(value=currstate[2])
  x4=m.Var(value=currstate[3])
  u1=m.MV(lb=0.0704,ub=0.7042)
  u1.STATUS=1
  u2=m.MV(lb=0.2465,ub=2.4648)
  u2.STATUS=1
  y1=m.Var()
  y2=m.Var()

  
  histint=m.Param(value=histintval)
  intu1u2=m.Var(value=0)

  g1=-8.13
  g2=-7.12
  g3=-11.07
  A1=92.8
  A2=12.66
  A3=2412.71
  B1=7.32
  B2=10.39
  B3=2170.57
  B4=7.02
  Tc=1

  a=m.exp(g1/x4)
  b=m.exp(g2/x4)
  c=m.exp(g3/x4)
  x24=x2*x4
  x34=x3*x4
  e=u1/x1
  f=B1/x1
  g=B2/x1
  h=B3/x1
  i=B4/x1


  #dynamics 
  m.Equation([x1.dt()==u1*(1-x1*x4)])
  m.Equation([x2.dt()==u1*(u2-x24)-A1*a*(x24**0.5)-A2*b*(x24**0.25)])
  m.Equation([x3.dt()==-u1*x34+A1*a*(x24**0.5)-A3*c*(x34**0.5)])
  m.Equation([x4.dt()==e*(1-x4)+f*a*(x24**0.5)+g*b*(x24**0.25)+h*c*(x34**0.5)-i*(x4-Tc)])
  m.Equation([y1==x3])
  m.Equation([y2==x4])

  tp=46.8

  m.Equation([0.175*tp==m.integral(u1*u2)+histint])

  m.Obj(-1*(u1*x3*x4))
  m.options.IMODE = 6  #Mode to solve EMPC 
  m.solve(disp=False)

  currstate=(x1.value[-1],x2.value[-1],x3.value[-1],x4.value[-1])
  histintval=intu1u2.value[-1]

plt.figure(figsize=(10,24))
plt.subplot(6,1,1)
plt.plot(m.time, x1.value, 'b-', label='density of gas')
plt.xlabel('Time'); plt.ylabel('x1'); plt.grid(); plt.legend()

plt.subplot(6,1,2)
plt.plot(m.time, x2.value, 'g-', label='ethylene concentration')
plt.xlabel('Time'); plt.ylabel('x2'); plt.grid(); plt.legend()

plt.subplot(6,1,3)
plt.plot(m.time, x3.value, 'r-', label='EO concentration')
plt.xlabel('Time'); plt.ylabel('x3'); plt.grid(); plt.legend()

plt.subplot(6,1,4)
plt.plot(m.time, x4.value, 'y-', label='Temperature')
plt.xlabel('Time'); plt.ylabel('x4'); plt.grid(); plt.legend()

plt.subplot(6,1,5)
plt.plot(m.time, u1.value, 'b-', label='Feed rate')
plt.xlabel('Time'); plt.ylabel('u1'); plt.grid(); plt.legend()

plt.subplot(6,1,6)
plt.plot(m.time, u2.value, 'b-', label='Feed rate')
plt.xlabel('Time'); plt.ylabel('u2'); plt.grid(); plt.legend()

plt.tight_layout()
plt.show()
